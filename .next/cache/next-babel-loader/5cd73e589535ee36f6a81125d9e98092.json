{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/cassiemorford/Desktop/cassieM/components/elevator-page/elevator-system.tsx\";\nimport React from \"react\";\nimport Elevator from '../elevator-page/elevator';\nimport { ElevatorDirection } from '../elevator-page/elevator-types';\n\nclass ElevatorSystem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"elevatorStep\", () => {\n      let {\n        elevators,\n        users,\n        totalFloors\n      } = this.state;\n      elevators.forEach(el => {\n        // MOVEMENT\n        // if at top or bottom, turn around\n        if (el.floor === totalFloors) {\n          el.direction = ElevatorDirection.Down;\n        }\n\n        if (el.floor === 1) {\n          el.direction = ElevatorDirection.Up;\n        } // USERS\n        // let off users\n\n\n        users.forEach(u => {\n          if (u.inElevator === el.el_id && el.floor === u.destination) {\n            //let riders off\n            u.inElevator = null;\n            u.onFloor = u.destination;\n            u.direction = null;\n          } else if (u.onFloor === el.floor && el.direction === u.direction) {\n            // let riders on\n            u.onFloor = null;\n            u.inElevator = el.el_id;\n          }\n        });\n        setTimeout(() => {}, 1000); // take next step\n\n        el.floor = el.direction === ElevatorDirection.Up ? el.floor + 1 : el.floor - 1;\n      });\n      this.setState({\n        elevators,\n        users\n      });\n    });\n\n    this.state = {\n      elevators: [{\n        floor: 1,\n        direction: ElevatorDirection.Up,\n        stops: [],\n        el_id: 'A'\n      }, {\n        floor: 5,\n        direction: ElevatorDirection.Down,\n        stops: [],\n        el_id: 'B'\n      }],\n      users: [{\n        origin: 2,\n        onFloor: 2,\n        destination: 3,\n        direction: ElevatorDirection.Up\n      }, {\n        origin: 1,\n        onFloor: 1,\n        destination: 3,\n        direction: ElevatorDirection.Up\n      }, {\n        origin: 4,\n        onFloor: 4,\n        destination: 2,\n        direction: ElevatorDirection.Down\n      }, {\n        origin: 2,\n        onFloor: 2,\n        destination: 5,\n        direction: ElevatorDirection.Up\n      }, {\n        origin: 4,\n        onFloor: 4,\n        destination: 5,\n        direction: ElevatorDirection.Up\n      }],\n      totalFloors: 5\n    };\n  }\n\n  render() {\n    const {\n      elevators,\n      users,\n      totalFloors\n    } = this.state;\n    const elevatorShaftStyles = {\n      height: `${100 * totalFloors}px`\n    };\n    const floors = new Array(totalFloors).fill(0).map((el, i) => totalFloors - i);\n    const peopleInElevators = users.filter(u => u.inElevator);\n    const peopleWaiting = users.filter(u => u.onFloor);\n    return React.createElement(\"div\", {\n      className: \"elevator-system\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.elevatorStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, \"Run Elevator\"), React.createElement(\"div\", {\n      className: \"elevator-system__graphic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"elevator-system__elevators\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, elevators.map(el => React.createElement(\"div\", {\n      className: \"elevator__shaft\",\n      key: el.el_id,\n      style: elevatorShaftStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(Elevator, _extends({}, el, {\n      el_id: el.el_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), peopleInElevators.filter(p => p.inElevator === el.el_id).map(p => React.createElement(\"div\", {\n      className: \"elevator__rider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, `${p.origin}\\u21e2${p.destination}`)))))), React.createElement(\"div\", {\n      className: \"elevator-system__floors\",\n      style: elevatorShaftStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, floors.map((floor, i) => React.createElement(\"div\", {\n      className: \"elevator-system__floor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"elevator-system__floor-number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, floor), peopleWaiting.filter(p => p.onFloor === floor).map(p => React.createElement(\"div\", {\n      className: \"elevator__rider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, `${p.origin}\\u21e2${p.destination}`)))))));\n  }\n\n}\n\nexport default ElevatorSystem;","map":{"version":3,"sources":["/Users/cassiemorford/Desktop/cassieM/components/elevator-page/elevator-system.tsx"],"names":["React","Elevator","ElevatorDirection","ElevatorSystem","Component","constructor","props","elevators","users","totalFloors","state","forEach","el","floor","direction","Down","Up","u","inElevator","el_id","destination","onFloor","setTimeout","setState","stops","origin","render","elevatorShaftStyles","height","floors","Array","fill","map","i","peopleInElevators","filter","peopleWaiting","elevatorStep","p"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Elevator from '../elevator-page/elevator';\nimport {ElevatorProps, ElevatorDirection} from '../elevator-page/elevator-types';\nimport { number } from \"prop-types\";\n\ninterface User {\n    origin: number;\n    inElevator?: string;\n    onFloor?: number;\n    destination: number;\n    direction?: ElevatorDirection;\n}\n\ninterface ElevatorSystemState {\n    elevators: ElevatorProps[];\n    users: User[];\n    totalFloors: number;\n}\n\nclass ElevatorSystem extends React.Component<{}, ElevatorSystemState> {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            elevators: [\n                {floor: 1, direction: ElevatorDirection.Up, stops: [], el_id: 'A'},\n                {floor: 5, direction: ElevatorDirection.Down, stops: [], el_id: 'B'}\n            ],\n            users: [{\n                origin: 2,\n                onFloor: 2,\n                destination: 3,\n                direction: ElevatorDirection.Up,\n            },{\n                origin: 1,\n                onFloor: 1,\n                destination: 3,\n                direction: ElevatorDirection.Up,\n            },{\n                origin: 4,\n                onFloor: 4,\n                destination: 2,\n                direction: ElevatorDirection.Down,\n            },{\n                origin: 2,\n                onFloor: 2,\n                destination: 5,\n                direction: ElevatorDirection.Up,\n            }, {\n                origin: 4,\n                onFloor: 4,\n                destination: 5,\n                direction: ElevatorDirection.Up,\n            }],\n            totalFloors: 5\n        }\n    }\n\n    elevatorStep = () => {\n        let {elevators, users, totalFloors} = this.state;\n\n        elevators.forEach(el => {\n            // MOVEMENT\n            // if at top or bottom, turn around\n            if(el.floor === totalFloors) {\n                el.direction = ElevatorDirection.Down;\n            }\n            if(el.floor === 1) {\n                el.direction = ElevatorDirection.Up;\n            }\n            \n            // USERS\n            // let off users\n            users.forEach(u => {\n                if (u.inElevator === el.el_id && el.floor === u.destination) {\n                    //let riders off\n                    u.inElevator = null;\n                    u.onFloor = u.destination;\n                    u.direction = null;\n                } else if (u.onFloor === el.floor && el.direction === u.direction) {\n                    // let riders on\n                    u.onFloor = null;\n                    u.inElevator = el.el_id;\n                }\n            });\n\n            setTimeout(() => {}, 1000);\n\n            // take next step\n            el.floor = el.direction === ElevatorDirection.Up ? el.floor + 1 : el.floor - 1;\n        });\n\n        this.setState({\n            elevators,\n            users\n        });\n    }\n\n    render() {\n        const {elevators, users, totalFloors} = this.state;\n        const elevatorShaftStyles = {height: `${100 *totalFloors}px`};\n        const floors = new Array(totalFloors).fill(0).map((el, i) => totalFloors - i);\n\n        const peopleInElevators = users.filter(u => u.inElevator);\n        const peopleWaiting = users.filter(u => u.onFloor);\n\n        return (<div className='elevator-system'>\n            <button onClick={this.elevatorStep}>Run Elevator</button>\n            <div className=\"elevator-system__graphic\">\n                <div className=\"elevator-system__elevators\">\n                    {elevators.map(el => \n                        <div className=\"elevator__shaft\" key={el.el_id} style={elevatorShaftStyles}>\n                            <Elevator {...el} el_id={el.el_id}>\n                                {peopleInElevators\n                                    .filter(p => p.inElevator === el.el_id)\n                                    .map(p => \n                                        <div className=\"elevator__rider\">\n                                            {`${p.origin}\\u21e2${p.destination}`}\n                                        </div>)}\n                            </Elevator>\n                        </div>\n                    )}\n                </div>\n                <div className=\"elevator-system__floors\" style={elevatorShaftStyles}>\n                    {floors.map((floor, i) => \n                        <div className=\"elevator-system__floor\">\n                            <div className=\"elevator-system__floor-number\">{floor}</div>\n                            {peopleWaiting\n                            .filter(p => p.onFloor === floor)\n                            .map(p => \n                                <div className=\"elevator__rider\">\n                                    {`${p.origin}\\u21e2${p.destination}`}\n                                </div>)}                       \n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>)\n    }\n}\n\nexport default ElevatorSystem;"]},"metadata":{},"sourceType":"module"}