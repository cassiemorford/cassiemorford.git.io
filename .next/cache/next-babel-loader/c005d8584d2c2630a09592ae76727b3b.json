{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cassiemorford/Desktop/cassieM/components/pokemon-list.tsx\";\nimport React from \"react\";\nimport \"isomorphic-fetch\";\nimport Fonts from './Fonts';\nimport \"../scss/main.scss\";\n\nvar PokemonList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PokemonList, _React$Component);\n\n  function PokemonList(props) {\n    var _this;\n\n    _classCallCheck(this, PokemonList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PokemonList).call(this, props));\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(PokemonList, [{\n    key: \"getPokemonData\",\n    value: function () {\n      var _getPokemonData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(url) {\n        var resp, pokemonData;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(url);\n\n              case 2:\n                resp = _context.sent;\n                _context.next = 5;\n                return resp.json();\n\n              case 5:\n                pokemonData = _context.sent;\n                this.setState(function (prevState) {\n                  return {\n                    data: [].concat(_toConsumableArray(prevState.data), [pokemonData])\n                  };\n                });\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getPokemonData(_x) {\n        return _getPokemonData.apply(this, arguments);\n      }\n\n      return getPokemonData;\n    }()\n  }, {\n    key: \"getPokemons\",\n    value: function () {\n      var _getPokemons = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(url) {\n        var _this2 = this;\n\n        var resp, respJson, results;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return fetch(url);\n\n              case 2:\n                resp = _context2.sent;\n                _context2.next = 5;\n                return resp.json();\n\n              case 5:\n                respJson = _context2.sent;\n                results = respJson.results;\n                results.forEach(function (res) {\n                  return _this2.getPokemonData(res.url);\n                });\n\n                if (respJson.next) {\n                  this.getPokemons(respJson.next);\n                }\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getPokemons(_x2) {\n        return _getPokemons.apply(this, arguments);\n      }\n\n      return getPokemons;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Fonts();\n      this.getPokemons(\"https://pokeapi.co/api/v2/pokemon/\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data;\n      return React.createElement(\"div\", {\n        className: \"pokemon-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, data.map(function (entry) {\n        var primaryType = entry.types[0].type.name;\n        var entryClass = \"pokemon-mini pokemon-mini--\".concat(primaryType);\n        return React.createElement(\"a\", {\n          className: entryClass,\n          href: entry.url,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          className: \"pokemon-mini__name\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63\n          },\n          __self: this\n        }, entry.name), React.createElement(\"img\", {\n          className: \"pokemon-mini__image\",\n          src: entry.sprites && entry.sprites.front_default,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }));\n      }));\n    }\n  }]);\n\n  return PokemonList;\n}(React.Component);\n\nexport default PokemonList;","map":{"version":3,"sources":["/Users/cassiemorford/Desktop/cassieM/components/pokemon-list.tsx"],"names":["React","Fonts","PokemonList","props","state","data","url","fetch","resp","json","pokemonData","setState","prevState","respJson","results","forEach","res","getPokemonData","next","getPokemons","map","entry","primaryType","types","type","name","entryClass","sprites","front_default","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAGA,OAAO,mBAAP;;IAiBMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAFe;AAGlB;;;;;;;gDAEoBC,G;;;;;;;uBACEC,KAAK,CAACD,GAAD,C;;;AAAlBE,gBAAAA,I;;uBACkCA,IAAI,CAACC,IAAL,E;;;AAAlCC,gBAAAA,W;AACN,qBAAKC,QAAL,CAAc,UAACC,SAAD,EAAe;AACzB,yBAAO;AAACP,oBAAAA,IAAI,+BAAMO,SAAS,CAACP,IAAhB,IAAsBK,WAAtB;AAAL,mBAAP;AACH,iBAFD;;;;;;;;;;;;;;;;;;;;;iDAKcJ,G;;;;;;;;;uBACKC,KAAK,CAACD,GAAD,C;;;AAAlBE,gBAAAA,I;;uBACiBA,IAAI,CAACC,IAAL,E;;;AAAjBI,gBAAAA,Q;AACAC,gBAAAA,O,GAA0BD,QAAQ,CAACC,O;AACzCA,gBAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,GAAG;AAAA,yBAAI,MAAI,CAACC,cAAL,CAAoBD,GAAG,CAACV,GAAxB,CAAJ;AAAA,iBAAnB;;AAEA,oBAAIO,QAAQ,CAACK,IAAb,EAAmB;AACf,uBAAKC,WAAL,CAAiBN,QAAQ,CAACK,IAA1B;AACH;;;;;;;;;;;;;;;;;;wCAGe;AAChBjB,MAAAA,KAAK;AACL,WAAKkB,WAAL;AACH;;;6BAEQ;AAAA,UACGd,IADH,GACY,KAAKD,KADjB,CACGC,IADH;AAGL,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,IAAI,CAACe,GAAL,CAAS,UAAAC,KAAK,EAAI;AACf,YAAMC,WAAW,GAAGD,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAeC,IAAf,CAAoBC,IAAxC;AACA,YAAMC,UAAU,wCAAiCJ,WAAjC,CAAhB;AACA,eACI;AAAG,UAAA,SAAS,EAAEI,UAAd;AAA0B,UAAA,IAAI,EAAEL,KAAK,CAACf,GAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAI,UAAA,SAAS,EAAC,oBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAoCe,KAAK,CAACI,IAA1C,CADJ,EAEI;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAqC,UAAA,GAAG,EAAEJ,KAAK,CAACM,OAAN,IAAiBN,KAAK,CAACM,OAAN,CAAcC,aAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,CADJ;AAIU,OAPb,CADL,CADJ;AAcH;;;;EA/CqB5B,KAAK,CAAC6B,S;;AAkDhC,eAAe3B,WAAf","sourcesContent":["import React from \"react\";\nimport \"isomorphic-fetch\";\nimport Fonts from './Fonts';\n\nimport StatCard from './stat-card';\nimport \"../scss/main.scss\";\n\n\ninterface PokemonLight {\n    name: string;\n    url: string;\n}\n\ninterface PokemonHeavy {\n    name: string;\n    url: string;\n}\n\ninterface PokemonListState {\n  data: any;\n}\n\nclass PokemonList extends React.Component<{}, PokemonListState> {\n    constructor(props) {\n        super(props);\n        this.state = { data: []};\n    }\n\n    async getPokemonData(url) {\n        const resp = await fetch(url);\n        const pokemonData: PokemonHeavy = await resp.json();\n        this.setState((prevState) => {\n            return {data: [...prevState.data, pokemonData]};\n        });\n    }\n\n    async getPokemons(url) {\n        const resp = await fetch(url);\n        const respJson = await resp.json();\n        const results: PokemonLight[] = respJson.results;\n        results.forEach(res => this.getPokemonData(res.url));\n\n        if (respJson.next) {\n            this.getPokemons(respJson.next);\n        }\n    }\n\n    componentDidMount() {\n        Fonts();\n        this.getPokemons(`https://pokeapi.co/api/v2/pokemon/`);\n    }\n\n    render() {\n        const { data } = this.state;\n\n        return (\n            <div className=\"pokemon-list\">\n                {data.map(entry => {\n                    const primaryType = entry.types[0].type.name;\n                    const entryClass = `pokemon-mini pokemon-mini--${primaryType}`;\n                    return  (\n                        <a className={entryClass} href={entry.url}>\n                            <h3 className=\"pokemon-mini__name\">{entry.name}</h3>\n                            <img className=\"pokemon-mini__image\" src={entry.sprites && entry.sprites.front_default}/>\n                        </a>)}\n\n                   )}\n            </div>\n        );\n    }\n}\n\nexport default PokemonList;\n"]},"metadata":{},"sourceType":"module"}