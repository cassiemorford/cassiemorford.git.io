{"ast":null,"code":"import _Number$isInteger from \"@babel/runtime-corejs2/core-js/number/is-integer\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/cassiemorford/Desktop/cassieM/components/calculator-page/calculator.tsx\";\nimport React from \"react\";\nimport CalculatorKey from './calculator-key';\nimport \"../../scss/main.scss\";\nconst numbers = \"1234567890\".split(\"\");\nconst operations = \"+-*/\".split(\"\");\nconst specialOperations = [\"CLR\", \"=\"];\n\nclass CalculatorComponent extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"calculateNewTotal\", () => {\n      const {\n        total,\n        display,\n        pendingOperation\n      } = this.state;\n      console.log(`${total}${pendingOperation}${display}`);\n      return eval(`${total}${pendingOperation}${display}`);\n    });\n\n    _defineProperty(this, \"clearHistory\", (maintainDisplay = false) => {\n      let newDisplay = 0;\n\n      if (maintainDisplay) {\n        newDisplay = this.calculateNewTotal();\n      }\n\n      this.setState({\n        display: newDisplay,\n        pendingOperation: \"+\",\n        total: 0,\n        continueInput: false\n      });\n    });\n\n    _defineProperty(this, \"handleKeyPress\", key => {\n      const {\n        total,\n        display,\n        pendingOperation,\n        continueInput\n      } = this.state;\n\n      if (_Number$isInteger(+key)) {\n        const newDisplay = continueInput ? display + key : key;\n        this.setState({\n          display: +newDisplay,\n          continueInput: true\n        });\n      } else if (specialOperations.includes(key)) {\n        this.clearHistory(key === '=');\n      } else {\n        const newTotal = this.calculateNewTotal();\n        this.setState({\n          display: newTotal,\n          pendingOperation: key,\n          total: newTotal,\n          continueInput: false\n        });\n      }\n    });\n\n    this.state = {\n      display: 0,\n      total: 0,\n      pendingOperation: \"+\",\n      continueInput: true\n    };\n  }\n\n  render() {\n    const {\n      display\n    } = this.state;\n    return React.createElement(\"div\", {\n      className: \"calculator\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"calculator__display\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, display.toString().slice(0, 10)), React.createElement(\"div\", {\n      className: \"calculator__main-keys\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"calculator__number-keys\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, numbers.map(number => React.createElement(CalculatorKey, {\n      symbol: number,\n      keyPressHandler: this.handleKeyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"calculator__operation-keys\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, operations.map(symbol => React.createElement(CalculatorKey, {\n      symbol: symbol,\n      keyPressHandler: this.handleKeyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    })))), React.createElement(\"div\", {\n      className: \"calculator__special-keys\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, specialOperations.map(symbol => React.createElement(CalculatorKey, {\n      symbol: symbol,\n      keyPressHandler: this.handleKeyPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }))), \" \");\n  }\n\n}\n\nexport default CalculatorComponent;","map":{"version":3,"sources":["/Users/cassiemorford/Desktop/cassieM/components/calculator-page/calculator.tsx"],"names":["React","CalculatorKey","numbers","split","operations","specialOperations","CalculatorComponent","Component","constructor","props","total","display","pendingOperation","state","console","log","eval","maintainDisplay","newDisplay","calculateNewTotal","setState","continueInput","key","includes","clearHistory","newTotal","render","toString","slice","map","number","handleKeyPress","symbol"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport CalculatorKey from './calculator-key'\nimport \"../../scss/main.scss\";\n\nconst numbers = \"1234567890\".split(\"\");\nconst operations = \"+-*/\".split(\"\");\nconst specialOperations = [\"CLR\", \"=\"];\n\ninterface CalculatorState {\n    display: number;\n    total: number;\n    pendingOperation: string;\n    continueInput: boolean;\n}\n\nclass CalculatorComponent extends React.Component<{}, CalculatorState> {\n    constructor(props) {\n      super(props);\n      this.state = {\n        display: 0,\n        total: 0,\n        pendingOperation: \"+\",\n        continueInput: true\n      };\n    }\n    \n    calculateNewTotal = () => {\n      const { total, display, pendingOperation } = this.state;\n      console.log(`${total}${pendingOperation}${display}`)\n      return eval(`${total}${pendingOperation}${display}`);\n    }\n  \n    clearHistory = (maintainDisplay = false) => {\n      let newDisplay = 0;\n      if (maintainDisplay) {\n        newDisplay = this.calculateNewTotal();\n      }\n      \n      this.setState({\n        display: newDisplay,\n        pendingOperation: \"+\",\n        total: 0,\n        continueInput: false\n      });\n    };\n  \n    handleKeyPress = key => {\n      const { total, display, pendingOperation, continueInput } = this.state;\n  \n      if (Number.isInteger(+key)) {\n        const newDisplay = continueInput ? display + key : key;\n        this.setState({\n          display: +newDisplay,\n          continueInput: true\n        });\n      } else if (specialOperations.includes(key)) {\n        this.clearHistory(key === '=');\n      } else {\n        const newTotal = this.calculateNewTotal();\n        this.setState({\n          display: newTotal,\n          pendingOperation: key,\n          total: newTotal,\n          continueInput: false\n        });\n      }\n    };\n  \n    render() {\n      const { display } = this.state;\n  \n      return (\n        <div className=\"calculator\">\n          <div className=\"calculator__display\">{display.toString().slice(0,10)}</div>\n          <div className=\"calculator__main-keys\">\n            <div className=\"calculator__number-keys\">\n              {numbers.map(number => (\n                <CalculatorKey symbol={number} keyPressHandler={this.handleKeyPress} />\n              ))}\n            </div>\n            <div className=\"calculator__operation-keys\">\n              {operations.map(symbol => (\n                <CalculatorKey symbol={symbol} keyPressHandler={this.handleKeyPress} />\n              ))}\n            </div>\n          </div>\n          <div className=\"calculator__special-keys\">\n            {specialOperations.map(symbol => (\n              <CalculatorKey symbol={symbol} keyPressHandler={this.handleKeyPress} />\n            ))}\n          </div>{\" \"}\n        </div>\n      );\n    }\n  }\n\nexport default CalculatorComponent;\n"]},"metadata":{},"sourceType":"module"}