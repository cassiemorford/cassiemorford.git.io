{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/cassiemorford/Desktop/cassieM/components/elevator-page/elevator-system.tsx\";\nimport React from \"react\";\nimport Elevator from '../elevator-page/elevator';\nimport { ElevatorDirection } from '../elevator-page/elevator-types';\n\nclass ElevatorSystem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"userCleanup\", () => {\n      let {\n        users\n      } = this.state;\n      users = users.filter(u => u.destination !== u.onFloor);\n      debugger;\n      this.setState({\n        users\n      });\n    });\n\n    _defineProperty(this, \"elevatorStep\", () => {\n      let {\n        elevators,\n        users,\n        totalFloors\n      } = this.state;\n      elevators.forEach(el => {\n        // MOVEMENT\n        // if at top or bottom, turn around\n        if (el.floor === totalFloors) {\n          el.direction = ElevatorDirection.Down;\n        }\n\n        if (el.floor === 1) {\n          el.direction = ElevatorDirection.Up;\n        } // take next step\n\n\n        el.floor = el.direction === ElevatorDirection.Up ? el.floor + 1 : el.floor - 1; // USERS\n        // let off users\n\n        users.forEach(u => {\n          if (u.inElevator === el.el_id && el.floor === u.destination) {\n            //let riders off\n            u.inElevator = null;\n            u.onFloor = u.destination;\n            u.direction = null;\n          } else if (u.onFloor === el.floor && el.direction === u.direction) {\n            // let riders on\n            u.onFloor = null;\n            u.inElevator = el.el_id;\n          }\n        });\n        this.userCleanup();\n      });\n      this.setState({\n        elevators,\n        users\n      });\n    });\n\n    this.state = {\n      elevators: [{\n        floor: 1,\n        direction: ElevatorDirection.Up,\n        stops: [],\n        el_id: 'A'\n      }, {\n        floor: 5,\n        direction: ElevatorDirection.Down,\n        stops: [],\n        el_id: 'B'\n      }],\n      users: [{\n        origin: 2,\n        onFloor: 2,\n        destination: 3,\n        direction: ElevatorDirection.Up\n      }, {\n        origin: 1,\n        onFloor: 1,\n        destination: 3,\n        direction: ElevatorDirection.Up\n      }, {\n        origin: 4,\n        onFloor: 4,\n        destination: 2,\n        direction: ElevatorDirection.Down\n      }, {\n        origin: 2,\n        onFloor: 2,\n        destination: 5,\n        direction: ElevatorDirection.Up\n      }, {\n        origin: 4,\n        onFloor: 4,\n        destination: 5,\n        direction: ElevatorDirection.Up\n      }],\n      totalFloors: 5\n    };\n  }\n\n  render() {\n    const {\n      elevators,\n      users,\n      totalFloors\n    } = this.state;\n    const elevatorShaftStyles = {\n      height: `${100 * totalFloors}px`\n    };\n    const floors = new Array(totalFloors).fill(0).map((el, i) => totalFloors - i);\n    const peopleInElevators = users.filter(u => u.inElevator);\n    const peopleWaiting = users.filter(u => u.onFloor);\n    return React.createElement(\"div\", {\n      className: \"elevator-system\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      onClick: this.elevatorStep,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, \"Run Elevator\"), React.createElement(\"div\", {\n      className: \"elevator-system__graphic\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"elevator-system__elevators\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, elevators.map(el => React.createElement(\"div\", {\n      className: \"elevator__shaft\",\n      key: el.el_id,\n      style: elevatorShaftStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(Elevator, _extends({}, el, {\n      el_id: el.el_id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }), peopleInElevators.filter(p => p.inElevator === el.el_id).map(p => React.createElement(\"div\", {\n      className: \"elevator__rider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, `${p.origin}\\u21e2${p.destination}`)))))), React.createElement(\"div\", {\n      className: \"elevator-system__floors\",\n      style: elevatorShaftStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134\n      },\n      __self: this\n    }, floors.map((floor, i) => React.createElement(\"div\", {\n      className: \"elevator-system__floor\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"elevator-system__floor-number\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, floor), peopleWaiting.filter(p => p.onFloor === floor).map(p => React.createElement(\"div\", {\n      className: \"elevator__rider\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, `${p.origin}\\u21e2${p.destination}`)))))));\n  }\n\n}\n\nexport default ElevatorSystem;","map":{"version":3,"sources":["/Users/cassiemorford/Desktop/cassieM/components/elevator-page/elevator-system.tsx"],"names":["React","Elevator","ElevatorDirection","ElevatorSystem","Component","constructor","props","users","state","filter","u","destination","onFloor","setState","elevators","totalFloors","forEach","el","floor","direction","Down","Up","inElevator","el_id","userCleanup","stops","origin","render","elevatorShaftStyles","height","floors","Array","fill","map","i","peopleInElevators","peopleWaiting","elevatorStep","p"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Elevator from '../elevator-page/elevator';\nimport {ElevatorProps, ElevatorDirection} from '../elevator-page/elevator-types';\nimport { number } from \"prop-types\";\n\ninterface User {\n    origin: number;\n    inElevator?: string;\n    onFloor?: number;\n    destination: number;\n    direction?: ElevatorDirection;\n}\n\ninterface ElevatorSystemState {\n    elevators: ElevatorProps[];\n    users: User[];\n    totalFloors: number;\n}\n\nclass ElevatorSystem extends React.Component<{}, ElevatorSystemState> {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            elevators: [\n                {floor: 1, direction: ElevatorDirection.Up, stops: [], el_id: 'A'},\n                {floor: 5, direction: ElevatorDirection.Down, stops: [], el_id: 'B'}\n            ],\n            users: [{\n                origin: 2,\n                onFloor: 2,\n                destination: 3,\n                direction: ElevatorDirection.Up,\n            },{\n                origin: 1,\n                onFloor: 1,\n                destination: 3,\n                direction: ElevatorDirection.Up,\n            },{\n                origin: 4,\n                onFloor: 4,\n                destination: 2,\n                direction: ElevatorDirection.Down,\n            },{\n                origin: 2,\n                onFloor: 2,\n                destination: 5,\n                direction: ElevatorDirection.Up,\n            }, {\n                origin: 4,\n                onFloor: 4,\n                destination: 5,\n                direction: ElevatorDirection.Up,\n            }],\n            totalFloors: 5\n        }\n    }\n\n    userCleanup = () => {\n        let {users} = this.state;\n\n        users = users.filter(u => u.destination !== u.onFloor);\n        debugger\n\n        this.setState({users});\n    }\n\n    elevatorStep = () => {\n        let {elevators, users, totalFloors} = this.state;\n\n        elevators.forEach(el => {\n            // MOVEMENT\n            // if at top or bottom, turn around\n            if(el.floor === totalFloors) {\n                el.direction = ElevatorDirection.Down;\n            }\n            if(el.floor === 1) {\n                el.direction = ElevatorDirection.Up;\n            }\n\n            // take next step\n            el.floor = el.direction === ElevatorDirection.Up ? el.floor + 1 : el.floor - 1;\n            \n            // USERS\n            // let off users\n            users.forEach(u => {\n                if (u.inElevator === el.el_id && el.floor === u.destination) {\n                    //let riders off\n                    u.inElevator = null;\n                    u.onFloor = u.destination;\n                    u.direction = null;\n                } else if (u.onFloor === el.floor && el.direction === u.direction) {\n                    // let riders on\n                    u.onFloor = null;\n                    u.inElevator = el.el_id;\n                }\n            });\n\n            this.userCleanup();\n\n        });\n\n        this.setState({\n            elevators,\n            users\n        });\n    }\n\n    render() {\n        const {elevators, users, totalFloors} = this.state;\n        const elevatorShaftStyles = {height: `${100 *totalFloors}px`};\n        const floors = new Array(totalFloors).fill(0).map((el, i) => totalFloors - i);\n\n        const peopleInElevators = users.filter(u => u.inElevator);\n        const peopleWaiting = users.filter(u => u.onFloor);\n\n        return (<div className='elevator-system'>\n            <button onClick={this.elevatorStep}>Run Elevator</button>\n            <div className=\"elevator-system__graphic\">\n                <div className=\"elevator-system__elevators\">\n                    {elevators.map(el => \n                        <div className=\"elevator__shaft\" key={el.el_id} style={elevatorShaftStyles}>\n                            <Elevator {...el} el_id={el.el_id}>\n                                {peopleInElevators\n                                    .filter(p => p.inElevator === el.el_id)\n                                    .map(p => \n                                        <div className=\"elevator__rider\">\n                                            {`${p.origin}\\u21e2${p.destination}`}\n                                        </div>)}\n                            </Elevator>\n                        </div>\n                    )}\n                </div>\n                <div className=\"elevator-system__floors\" style={elevatorShaftStyles}>\n                    {floors.map((floor, i) => \n                        <div className=\"elevator-system__floor\">\n                            <div className=\"elevator-system__floor-number\">{floor}</div>\n                            {peopleWaiting\n                            .filter(p => p.onFloor === floor)\n                            .map(p => \n                                <div className=\"elevator__rider\">\n                                    {`${p.origin}\\u21e2${p.destination}`}\n                                </div>)}                       \n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>)\n    }\n}\n\nexport default ElevatorSystem;"]},"metadata":{},"sourceType":"module"}