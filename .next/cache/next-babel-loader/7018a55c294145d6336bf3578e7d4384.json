{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cassiemorford/Desktop/cassieM/components/elevator-page/elevator-system.tsx\";\nimport React from \"react\";\nimport Elevator from '../elevator-page/elevator';\nimport { ElevatorDirection } from '../elevator-page/elevator-types';\n\nvar ElevatorSystem =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ElevatorSystem, _React$Component);\n\n  function ElevatorSystem(props) {\n    var _this;\n\n    _classCallCheck(this, ElevatorSystem);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ElevatorSystem).call(this, props));\n    _this.state = {\n      elevators: [{\n        floor: 1,\n        direction: ElevatorDirection.Up,\n        stops: []\n      }, {\n        floor: 4,\n        direction: ElevatorDirection.Down,\n        stops: []\n      }],\n      users: [{\n        origin: 2,\n        onFloor: 2,\n        destination: 3,\n        direction: ElevatorDirection.Up\n      }, {\n        origin: 1,\n        inElevator: 1,\n        destination: 4,\n        direction: ElevatorDirection.Up\n      }],\n      totalFloors: 5\n    };\n    return _this;\n  }\n\n  _createClass(ElevatorSystem, [{\n    key: \"elevatorStep\",\n    value: function elevatorStep() {\n      var _this$state = this.state,\n          elevators = _this$state.elevators,\n          users = _this$state.users,\n          totalFloors = _this$state.totalFloors;\n      elevators.forEach(function (el, i) {\n        // MOVEMENT\n        // if at top or bottom, turn around\n        if (el.floor === totalFloors) {\n          el.direction = ElevatorDirection.Down;\n        }\n\n        if (el.floor === 1) {\n          el.direction = ElevatorDirection.Up;\n        } // take next step\n\n\n        el.floor = el.direction === ElevatorDirection.up ? el.floor++ : el.floor--; // USERS\n        // let off users\n\n        users.forEach(function (u) {\n          //let riders off\n          if (u.inElevator === i && el.floor === u.destination) {\n            u.inElevator = null;\n            u.onFloor = u.destination;\n          } //let riders on\n\n\n          if (u.onFloor === i && el.direction === u.direction) {\n            u.onFloor = null;\n            u.inElevator = i;\n          }\n        });\n      });\n      this.setState({\n        elevators: elevators,\n        users: users\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          elevators = _this$state2.elevators,\n          users = _this$state2.users,\n          totalFloors = _this$state2.totalFloors;\n      var elevatorShaftStyles = {\n        height: \"\".concat(100 * totalFloors, \"px\")\n      };\n      var floors = new Array(totalFloors).fill(0);\n      var peopleInElevators = users.filter(function (u) {\n        return u.inElevator;\n      });\n      var peopleWaiting = users.filter(function (u) {\n        return u.onFloor;\n      });\n      return React.createElement(\"div\", {\n        className: \"elevator-system\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this.elevatorStep,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Next Step\"), React.createElement(\"div\", {\n        className: \"elevator-system__elevators\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, elevators.map(function (el, i) {\n        return React.createElement(\"div\", {\n          className: \"elevator__shaft\",\n          style: elevatorShaftStyles,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, React.createElement(Elevator, _extends({}, el, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }), peopleInElevators.filter(function (p) {\n          return p.inElevator === i;\n        }).map(function (p) {\n          return React.createElement(\"div\", {\n            className: \"elevator__rider\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 100\n            },\n            __self: this\n          }, \"\".concat(p.origin, \"\\u21E2\").concat(p.destination));\n        })));\n      })), React.createElement(\"div\", {\n        className: \"elevator-system__floors\",\n        style: elevatorShaftStyles,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, floors.map(function (floor, i) {\n        return React.createElement(\"div\", {\n          className: \"elevator-system__floor\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }, peopleWaiting.filter(function (p) {\n          return p.onFloor === i;\n        }).map(function (p) {\n          return React.createElement(\"div\", {\n            className: \"elevator__rider\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 113\n            },\n            __self: this\n          }, \"\".concat(p.origin, \"\\u21E2\").concat(p.destination));\n        }));\n      })));\n    }\n  }]);\n\n  return ElevatorSystem;\n}(React.Component);\n\nexport default ElevatorSystem;","map":{"version":3,"sources":["/Users/cassiemorford/Desktop/cassieM/components/elevator-page/elevator-system.tsx"],"names":["React","Elevator","ElevatorDirection","ElevatorSystem","props","state","elevators","floor","direction","Up","stops","Down","users","origin","onFloor","destination","inElevator","totalFloors","forEach","el","i","up","u","setState","elevatorShaftStyles","height","floors","Array","fill","peopleInElevators","filter","peopleWaiting","elevatorStep","map","p","Component"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAAuBC,iBAAvB,QAA+C,iCAA/C;;IAiBMC,c;;;;;AAEF,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,wFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,CACP;AAACC,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,SAAS,EAAEN,iBAAiB,CAACO,EAAxC;AAA4CC,QAAAA,KAAK,EAAE;AAAnD,OADO,EAEP;AAACH,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,SAAS,EAAEN,iBAAiB,CAACS,IAAxC;AAA8CD,QAAAA,KAAK,EAAE;AAArD,OAFO,CADF;AAKTE,MAAAA,KAAK,EAAE,CAAC;AACJC,QAAAA,MAAM,EAAE,CADJ;AAEJC,QAAAA,OAAO,EAAE,CAFL;AAGJC,QAAAA,WAAW,EAAE,CAHT;AAIJP,QAAAA,SAAS,EAAEN,iBAAiB,CAACO;AAJzB,OAAD,EAKJ;AACCI,QAAAA,MAAM,EAAE,CADT;AAECG,QAAAA,UAAU,EAAE,CAFb;AAGCD,QAAAA,WAAW,EAAE,CAHd;AAICP,QAAAA,SAAS,EAAEN,iBAAiB,CAACO;AAJ9B,OALI,CALE;AAgBTQ,MAAAA,WAAW,EAAE;AAhBJ,KAAb;AAHe;AAqBlB;;;;mCAEc;AAAA,wBAC2B,KAAKZ,KADhC;AAAA,UACNC,SADM,eACNA,SADM;AAAA,UACKM,KADL,eACKA,KADL;AAAA,UACYK,WADZ,eACYA,WADZ;AAGXX,MAAAA,SAAS,CAACY,OAAV,CAAkB,UAACC,EAAD,EAAKC,CAAL,EAAW;AACzB;AACA;AACA,YAAGD,EAAE,CAACZ,KAAH,KAAaU,WAAhB,EAA6B;AACzBE,UAAAA,EAAE,CAACX,SAAH,GAAeN,iBAAiB,CAACS,IAAjC;AACH;;AACD,YAAGQ,EAAE,CAACZ,KAAH,KAAa,CAAhB,EAAmB;AACfY,UAAAA,EAAE,CAACX,SAAH,GAAeN,iBAAiB,CAACO,EAAjC;AACH,SARwB,CAUzB;;;AACAU,QAAAA,EAAE,CAACZ,KAAH,GAAWY,EAAE,CAACX,SAAH,KAAiBN,iBAAiB,CAACmB,EAAnC,GAAwCF,EAAE,CAACZ,KAAH,EAAxC,GAAqDY,EAAE,CAACZ,KAAH,EAAhE,CAXyB,CAazB;AACA;;AACAK,QAAAA,KAAK,CAACM,OAAN,CAAc,UAAAI,CAAC,EAAI;AACf;AACA,cAAIA,CAAC,CAACN,UAAF,KAAiBI,CAAjB,IAAsBD,EAAE,CAACZ,KAAH,KAAae,CAAC,CAACP,WAAzC,EAAsD;AAClDO,YAAAA,CAAC,CAACN,UAAF,GAAe,IAAf;AACAM,YAAAA,CAAC,CAACR,OAAF,GAAYQ,CAAC,CAACP,WAAd;AACH,WALc,CAMf;;;AACA,cAAIO,CAAC,CAACR,OAAF,KAAcM,CAAd,IAAmBD,EAAE,CAACX,SAAH,KAAiBc,CAAC,CAACd,SAA1C,EAAqD;AACjDc,YAAAA,CAAC,CAACR,OAAF,GAAY,IAAZ;AACAQ,YAAAA,CAAC,CAACN,UAAF,GAAeI,CAAf;AACH;AACJ,SAXD;AAYH,OA3BD;AA6BA,WAAKG,QAAL,CAAc;AACVjB,QAAAA,SAAS,EAATA,SADU;AAEVM,QAAAA,KAAK,EAALA;AAFU,OAAd;AAIH;;;6BAEQ;AAAA,yBACmC,KAAKP,KADxC;AAAA,UACEC,SADF,gBACEA,SADF;AAAA,UACaM,KADb,gBACaA,KADb;AAAA,UACoBK,WADpB,gBACoBA,WADpB;AAEL,UAAMO,mBAAmB,GAAG;AAACC,QAAAA,MAAM,YAAK,MAAKR,WAAV;AAAP,OAA5B;AACA,UAAMS,MAAM,GAAG,IAAIC,KAAJ,CAAUV,WAAV,EAAuBW,IAAvB,CAA4B,CAA5B,CAAf;AAEA,UAAMC,iBAAiB,GAAGjB,KAAK,CAACkB,MAAN,CAAa,UAAAR,CAAC;AAAA,eAAIA,CAAC,CAACN,UAAN;AAAA,OAAd,CAA1B;AACA,UAAMe,aAAa,GAAGnB,KAAK,CAACkB,MAAN,CAAa,UAAAR,CAAC;AAAA,eAAIA,CAAC,CAACR,OAAN;AAAA,OAAd,CAAtB;AAEA,aAAQ;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACJ;AAAQ,QAAA,OAAO,EAAE,KAAKkB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADI,EAEJ;AAAK,QAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK1B,SAAS,CAAC2B,GAAV,CAAc,UAACd,EAAD,EAAKC,CAAL;AAAA,eACX;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAiC,UAAA,KAAK,EAAEI,mBAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,QAAD,eAAcL,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YACKU,iBAAiB,CACbC,MADJ,CACW,UAAAI,CAAC;AAAA,iBAAIA,CAAC,CAAClB,UAAF,KAAiBI,CAArB;AAAA,SADZ,EAEIa,GAFJ,CAEQ,UAAAC,CAAC;AAAA,iBACF;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQA,CAAC,CAACrB,MADV,mBACyBqB,CAAC,CAACnB,WAD3B,EADE;AAAA,SAFT,CADL,CADJ,CADW;AAAA,OAAd,CADL,CAFI,EAgBJ;AAAK,QAAA,SAAS,EAAC,yBAAf;AAAyC,QAAA,KAAK,EAAES,mBAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKE,MAAM,CAACO,GAAP,CAAW,UAAC1B,KAAD,EAAQa,CAAR;AAAA,eACR;AAAK,UAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKW,aAAa,CACbD,MADA,CACO,UAAAI,CAAC;AAAA,iBAAIA,CAAC,CAACpB,OAAF,KAAcM,CAAlB;AAAA,SADR,EAEAa,GAFA,CAEI,UAAAC,CAAC;AAAA,iBACF;AAAK,YAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACQA,CAAC,CAACrB,MADV,mBACyBqB,CAAC,CAACnB,WAD3B,EADE;AAAA,SAFL,CADL,CADQ;AAAA,OAAX,CADL,CAhBI,CAAR;AA6BH;;;;EApGwBf,KAAK,CAACmC,S;;AAuGnC,eAAehC,cAAf","sourcesContent":["import React from \"react\";\nimport Elevator from '../elevator-page/elevator';\nimport {ElevatorProps, ElevatorDirection} from '../elevator-page/elevator-types';\nimport { number } from \"prop-types\";\n\ninterface User {\n    origin: number;\n    inElevator?: number;\n    onFloor?: number;\n    destination: number;\n    direction: ElevatorDirection;\n}\n\ninterface ElevatorSystemState {\n    elevators: ElevatorProps[];\n    users: User[];\n    totalFloors: number;\n}\n\nclass ElevatorSystem extends React.Component<{}, ElevatorSystemState> {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            elevators: [\n                {floor: 1, direction: ElevatorDirection.Up, stops: []},\n                {floor: 4, direction: ElevatorDirection.Down, stops: []}\n            ],\n            users: [{\n                origin: 2,\n                onFloor: 2,\n                destination: 3,\n                direction: ElevatorDirection.Up,\n            }, {\n                origin: 1,\n                inElevator: 1,\n                destination: 4,\n                direction: ElevatorDirection.Up,\n            }],\n            totalFloors: 5\n        }\n    }\n\n    elevatorStep() {\n        let {elevators, users, totalFloors} = this.state;\n\n        elevators.forEach((el, i) => {\n            // MOVEMENT\n            // if at top or bottom, turn around\n            if(el.floor === totalFloors) {\n                el.direction = ElevatorDirection.Down;\n            }\n            if(el.floor === 1) {\n                el.direction = ElevatorDirection.Up;\n            }\n\n            // take next step\n            el.floor = el.direction === ElevatorDirection.up ? el.floor++ : el.floor--;\n\n            // USERS\n            // let off users\n            users.forEach(u => {\n                //let riders off\n                if (u.inElevator === i && el.floor === u.destination) {\n                    u.inElevator = null;\n                    u.onFloor = u.destination;\n                }    \n                //let riders on\n                if (u.onFloor === i && el.direction === u.direction) {\n                    u.onFloor = null;\n                    u.inElevator = i;\n                }\n            });\n        });\n\n        this.setState({\n            elevators,\n            users\n        });\n    }\n\n    render() {\n        const {elevators, users, totalFloors} = this.state;\n        const elevatorShaftStyles = {height: `${100 *totalFloors}px`};\n        const floors = new Array(totalFloors).fill(0);\n\n        const peopleInElevators = users.filter(u => u.inElevator);\n        const peopleWaiting = users.filter(u => u.onFloor);\n\n        return (<div className='elevator-system'>\n            <button onClick={this.elevatorStep}>Next Step</button>\n            <div className=\"elevator-system__elevators\">\n                {elevators.map((el, i) => \n                    <div className=\"elevator__shaft\" style={elevatorShaftStyles}>\n                        <Elevator {...el}>\n                            {peopleInElevators\n                                .filter(p => p.inElevator === i)\n                                .map(p => \n                                    <div className=\"elevator__rider\">\n                                        {`${p.origin}\\u21e2${p.destination}`}\n                                    </div>)}\n                        </Elevator>\n                    </div>\n                )}\n            </div>\n            <div className=\"elevator-system__floors\" style={elevatorShaftStyles}>\n                {floors.map((floor, i) => \n                    <div className=\"elevator-system__floor\">\n                        {peopleWaiting\n                        .filter(p => p.onFloor === i)\n                        .map(p => \n                            <div className=\"elevator__rider\">\n                                {`${p.origin}\\u21e2${p.destination}`}\n                            </div>)}                       \n                    </div>\n                )}\n            </div>\n        </div>)\n    }\n}\n\nexport default ElevatorSystem;"]},"metadata":{},"sourceType":"module"}