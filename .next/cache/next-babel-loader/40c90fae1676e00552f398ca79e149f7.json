{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"/Users/cassiemorford/Desktop/cassieM/components/elevator-page/elevator-system.tsx\";\nimport React from \"react\";\nimport Elevator from '../elevator-page/elevator';\nimport { ElevatorDirection } from '../elevator-page/elevator-types';\n\nclass ElevatorSystem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      elevators: [{\n        floor: 1,\n        direction: ElevatorDirection.Up,\n        stops: []\n      }],\n      users: [],\n      totalFloors: 10\n    };\n  }\n\n  render() {\n    const {\n      elevators,\n      users,\n      totalFloors\n    } = this.state;\n    const elevatorShaftStyles = {\n      height: `${100 * totalFloors}px`\n    };\n    return React.createElement(\"div\", {\n      className: \"elevator-system\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"elevator-system--elevators\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, elevators.map(el => React.createElement(\"div\", {\n      className: \"elevator__shaft\",\n      styles: elevatorShaftStyles,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, React.createElement(Elevator, _extends({}, el, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }))))), React.createElement(\"div\", {\n      className: \"elevator-system--users\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, users.map(el => React.createElement(\"div\", {\n      className: \"elevator-system--user\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default ElevatorSystem;","map":{"version":3,"sources":["/Users/cassiemorford/Desktop/cassieM/components/elevator-page/elevator-system.tsx"],"names":["React","Elevator","ElevatorDirection","ElevatorSystem","Component","constructor","props","state","elevators","floor","direction","Up","stops","users","totalFloors","render","elevatorShaftStyles","height","map","el"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAAuBC,iBAAvB,QAA+C,iCAA/C;;AAcA,MAAMC,cAAN,SAA6BH,KAAK,CAACI,SAAnC,CAAsE;AAElEC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAGA,SAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,CAAC;AAACC,QAAAA,KAAK,EAAE,CAAR;AAAWC,QAAAA,SAAS,EAAER,iBAAiB,CAACS,EAAxC;AAA4CC,QAAAA,KAAK,EAAE;AAAnD,OAAD,CADF;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,WAAW,EAAE;AAHJ,KAAb;AAKH;;AAEDC,EAAAA,MAAM,GAAG;AACL,UAAM;AAACP,MAAAA,SAAD;AAAYK,MAAAA,KAAZ;AAAmBC,MAAAA;AAAnB,QAAkC,KAAKP,KAA7C;AACA,UAAMS,mBAAmB,GAAG;AAACC,MAAAA,MAAM,EAAG,GAAE,MAAKH,WAAY;AAA7B,KAA5B;AAEA,WAAQ;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACJ;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,SAAS,CAACU,GAAV,CAAcC,EAAE,IACjB;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAiC,MAAA,MAAM,EAAEH,mBAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,QAAD,eAAcG,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADJ,CADC,CADL,CADI,EAQJ;AAAK,MAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKN,KAAK,CAACK,GAAN,CAAUC,EAAE,IACT;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CARI,CAAR;AAcH;;AA/BiE;;AAkCtE,eAAehB,cAAf","sourcesContent":["import React from \"react\";\nimport Elevator from '../elevator-page/elevator';\nimport {ElevatorProps, ElevatorDirection} from '../elevator-page/elevator-types';\n\ninterface User {\n    waiting: boolean;\n    startFloor: number;\n    endFloor: number;\n}\n\ninterface ElevatorSystemState {\n    elevators: ElevatorProps[];\n    users: User[];\n    totalFloors: number;\n}\n\nclass ElevatorSystem extends React.Component<{}, ElevatorSystemState> {\n    \n    constructor(props) {\n        super(props);\n\n\n        this.state = {\n            elevators: [{floor: 1, direction: ElevatorDirection.Up, stops: []}],\n            users: [],\n            totalFloors: 10\n        }\n    }\n\n    render() {\n        const {elevators, users, totalFloors} = this.state;\n        const elevatorShaftStyles = {height: `${100 *totalFloors}px`};\n\n        return (<div className='elevator-system'>\n            <div className=\"elevator-system--elevators\">\n                {elevators.map(el => \n                <div className=\"elevator__shaft\" styles={elevatorShaftStyles}>\n                    <Elevator {...el}/>\n                </div>\n                )}\n            </div>\n            <div className=\"elevator-system--users\">\n                {users.map(el => \n                    <div className=\"elevator-system--user\"></div>\n                )}\n            </div>\n        </div>)\n    }\n}\n\nexport default ElevatorSystem;"]},"metadata":{},"sourceType":"module"}