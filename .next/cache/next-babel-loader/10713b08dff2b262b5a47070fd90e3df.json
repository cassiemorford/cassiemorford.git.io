{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cassiemorford/Desktop/cassieM/components/pokemon-info.tsx\";\nimport React from \"react\";\nimport \"isomorphic-fetch\";\nimport Fonts from './Fonts';\nimport StatCard from './stat-card';\nimport \"../scss/main.scss\";\n\nvar PokemonInfo =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PokemonInfo, _React$Component);\n\n  function PokemonInfo(props) {\n    var _this;\n\n    _classCallCheck(this, PokemonInfo);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PokemonInfo).call(this, props));\n    _this.state = {\n      data: {},\n      loading: true\n    };\n    return _this;\n  }\n\n  _createClass(PokemonInfo, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var resp, respJson;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Fonts();\n                _context.next = 3;\n                return fetch(\"https://pokeapi.co/api/v2/pokemon/\".concat(this.props.name));\n\n              case 3:\n                resp = _context.sent;\n                _context.next = 6;\n                return resp.json();\n\n              case 6:\n                respJson = _context.sent;\n                console.log(respJson);\n                this.setState({\n                  data: respJson,\n                  loading: false\n                });\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          data = _this$state.data,\n          loading = _this$state.loading;\n      return React.createElement(\"div\", {\n        className: \"pokemon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, loading && React.createElement(\"div\", {\n        className: \"loader\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), !loading && React.createElement(\"div\", {\n        className: \"pokemon__content\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"pokemon__header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        className: \"pokemon__image\",\n        src: data.sprites && data.sprites.back_default,\n        alt: data.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"pokemon__name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, data.name), React.createElement(\"img\", {\n        className: \"pokemon__image\",\n        src: data.sprites && data.sprites.front_default,\n        alt: data.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"pokemon__left\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        className: \"pokemon__type-list-header\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, \" types \"), React.createElement(\"ul\", {\n        className: \"pokemon__type-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, data.types.map(function (t) {\n        return React.createElement(\"li\", {\n          className: \"pokemon__type\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, t.type.name);\n      })), React.createElement(\"p\", {\n        className: \"pokemon__weight\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \" weight: \", data.weight)), React.createElement(\"div\", {\n        className: \"pokemon__right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, React.createElement(StatCard, {\n        stats: data.stats,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return PokemonInfo;\n}(React.Component);\n\nexport default PokemonInfo;","map":{"version":3,"sources":["/Users/cassiemorford/Desktop/cassieM/components/pokemon-info.tsx"],"names":["React","Fonts","StatCard","PokemonInfo","props","state","data","loading","fetch","name","resp","json","respJson","console","log","setState","sprites","back_default","front_default","types","map","t","type","weight","stats","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"isomorphic-fetch\";\nimport Fonts from './Fonts';\n\nimport StatCard from './stat-card';\nimport \"../scss/main.scss\";\n\ninterface PokemonProps{\n  name: string;\n}\n\ninterface PokemonState {\n  data: any;\n  loading: boolean;\n}\n\nclass PokemonInfo extends React.Component<PokemonProps, PokemonState> {\n  constructor(props) {\n    super(props);\n    this.state = { data: {}, loading: true };\n  }\n\n  async componentDidMount() {\n    Fonts();\n    const resp = await fetch(`https://pokeapi.co/api/v2/pokemon/${this.props.name}`);\n    const respJson = await resp.json();\n    console.log(respJson);\n\n    this.setState({\n      data: respJson,\n      loading: false\n    });\n  }\n\n  render() {\n    const { data, loading } = this.state;\n\n    return (\n      <div className=\"pokemon\">\n        {loading && <div className=\"loader\" />}\n        {!loading && (\n          <div className=\"pokemon__content\">\n            <div className=\"pokemon__header\">\n              <img\n                className=\"pokemon__image\"\n                src={data.sprites && data.sprites.back_default}\n                alt={data.name}\n              />\n              <h3 className=\"pokemon__name\">{data.name}</h3>\n              <img\n                className=\"pokemon__image\"\n                src={data.sprites && data.sprites.front_default}\n                alt={data.name}\n              />\n            </div>\n            <div className=\"pokemon__left\">\n              <h3 className=\"pokemon__type-list-header\"> types </h3>\n              <ul className=\"pokemon__type-list\">\n                {data.types!.map(t => (\n                  <li className=\"pokemon__type\">{t.type.name}</li>\n                ))}\n              </ul>\n              <p className=\"pokemon__weight\"> weight: {data.weight}</p>\n            </div>\n            <div className=\"pokemon__right\">\n                  <StatCard stats={data.stats}/>\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default PokemonInfo;\n"]},"metadata":{},"sourceType":"module"}