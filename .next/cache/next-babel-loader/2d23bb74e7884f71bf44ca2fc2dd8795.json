{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/cassiemorford/Desktop/cassieM/components/pokemon-list.tsx\";\nimport React from \"react\";\nimport \"isomorphic-fetch\";\nimport Fonts from './Fonts';\nimport \"../scss/main.scss\";\n\nvar PokemonList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(PokemonList, _React$Component);\n\n  function PokemonList(props) {\n    var _this;\n\n    _classCallCheck(this, PokemonList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(PokemonList).call(this, props));\n    _this.state = {\n      data: []\n    };\n    return _this;\n  }\n\n  _createClass(PokemonList, [{\n    key: \"getPokemons\",\n    value: function () {\n      var _getPokemons = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(url) {\n        var resp, respJson, results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return fetch(url);\n\n              case 2:\n                resp = _context.sent;\n                _context.next = 5;\n                return resp.json();\n\n              case 5:\n                respJson = _context.sent;\n                results = respJson.results;\n                _context.next = 9;\n                return this.setState({\n                  data: [].concat(_toConsumableArray(this.state.data), _toConsumableArray(results))\n                });\n\n              case 9:\n                if (results.next) {\n                  this.getPokemons(results.next);\n                }\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function getPokemons(_x) {\n        return _getPokemons.apply(this, arguments);\n      }\n\n      return getPokemons;\n    }()\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Fonts();\n      this.getPokemons(\"https://pokeapi.co/api/v2/pokemon/\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var data = this.state.data;\n      return React.createElement(\"div\", {\n        className: \"pokemon-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, data.map(function (entry) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, entry.name), React.createElement(\"img\", {\n          src: entry.sprites && entry.sprites.front_default,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, \" weight: \", entry.weight));\n      }));\n    }\n  }]);\n\n  return PokemonList;\n}(React.Component);\n\nexport default PokemonList;","map":{"version":3,"sources":["/Users/cassiemorford/Desktop/cassieM/components/pokemon-list.tsx"],"names":["React","Fonts","PokemonList","props","state","data","url","fetch","resp","json","respJson","results","setState","next","getPokemons","map","entry","name","sprites","front_default","weight","Component"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,kBAAP;AACA,OAAOC,KAAP,MAAkB,SAAlB;AAGA,OAAO,mBAAP;;IAOMC,W;;;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAb;AAFe;AAGlB;;;;;;;gDAEiBC,G;;;;;;;uBACKC,KAAK,CAACD,GAAD,C;;;AAAlBE,gBAAAA,I;;uBACiBA,IAAI,CAACC,IAAL,E;;;AAAjBC,gBAAAA,Q;AACAC,gBAAAA,O,GAAUD,QAAQ,CAACC,O;;uBACnB,KAAKC,QAAL,CAAc;AAChBP,kBAAAA,IAAI,+BAAM,KAAKD,KAAL,CAAWC,IAAjB,sBAA0BM,OAA1B;AADY,iBAAd,C;;;AAIN,oBAAIA,OAAO,CAACE,IAAZ,EAAkB;AACd,uBAAKC,WAAL,CAAiBH,OAAO,CAACE,IAAzB;AACH;;;;;;;;;;;;;;;;;;wCAGe;AAChBZ,MAAAA,KAAK;AACL,WAAKa,WAAL;AACH;;;6BAEQ;AAAA,UACGT,IADH,GACY,KAAKD,KADjB,CACGC,IADH;AAGL,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,IAAI,CAACU,GAAL,CAAS,UAAAC,KAAK;AAAA,eACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,KAAK,CAACC,IAAX,CADJ,EAEI;AAAK,UAAA,GAAG,EAAED,KAAK,CAACE,OAAN,IAAiBF,KAAK,CAACE,OAAN,CAAcC,aAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAaH,KAAK,CAACI,MAAnB,CAHJ,CADe;AAAA,OAAd,CADL,CADJ;AAUH;;;;EArCqBpB,KAAK,CAACqB,S;;AAwChC,eAAenB,WAAf","sourcesContent":["import React from \"react\";\nimport \"isomorphic-fetch\";\nimport Fonts from './Fonts';\n\nimport StatCard from './stat-card';\nimport \"../scss/main.scss\";\n\n\ninterface PokemonListState {\n  data: any;\n}\n\nclass PokemonList extends React.Component<{}, PokemonListState> {\n    constructor(props) {\n        super(props);\n        this.state = { data: []};\n    }\n\n    async getPokemons(url) {\n        const resp = await fetch(url);\n        const respJson = await resp.json();\n        const results = respJson.results;\n        await this.setState({\n            data: [...this.state.data, ...results]\n        });\n\n        if (results.next) {\n            this.getPokemons(results.next);\n        }\n    }\n\n    componentDidMount() {\n        Fonts();\n        this.getPokemons(`https://pokeapi.co/api/v2/pokemon/`);\n    }\n\n    render() {\n        const { data } = this.state;\n\n        return (\n            <div className=\"pokemon-list\">\n                {data.map(entry => \n                <div>\n                    <h3>{entry.name}</h3>\n                    <img src={entry.sprites && entry.sprites.front_default}/>\n                    <p> weight: {entry.weight}</p>\n                </div>)}\n            </div>\n        );\n    }\n}\n\nexport default PokemonList;\n"]},"metadata":{},"sourceType":"module"}